# This makefile builds the client-side example code into a Windows
# PC executable.
# It requires GNU make and a version of GCC for a Windows PC target.
# If GCC is not on the path, please set the environment variable GCC_PREFIX
# to the directory where GCC is kept before invoking make.
# For instance, if GCC is at c:\gccforwin\bin\gcc.exe, GCC_PREFIX would
# be set to c:\gccforwin\bin\

# Check that we have GNU Make
ifneq (,)
This makefile requires GNU Make.
endif

# Definitions 
PROGRAM = client_side.exe
SRC_DIR = ..
# It would be nice to set OBJ_DIR to a subdirectory but note that 
# the dependency information generated by the compiler is relative
# to this directory and so doesn't work correctly if you do so
OBJ_DIR = .
CPP_FILES := $(wildcard $(SRC_DIR)/*.cpp)
OBJ_FILES := $(patsubst $(SRC_DIR)/%.cpp, $(OBJ_DIR)/%.o, $(CPP_FILES))
CC = $(GCC_PREFIX)g++.exe
CFLAGS = -Wall -pedantic -I$(SRC_DIR)
LDFLAGS =

# Rule for make all
all: $(PROGRAM)

$(PROGRAM): .depend $(OBJ_FILES)
	$(CC) $(LDFLAGS) $(OBJ_FILES) -o $(PROGRAM)

$(OBJ_DIR):
	-@md $(OBJ_DIR)

# Internal rule to include dependencies
define genDepend
  $(CC) -MM -MF depend $(1)
  type depend >> $(OBJ_DIR)\.depend
  
endef

depend: .depend

.depend: | $(OBJ_DIR)
	@if exist $(OBJ_DIR)\.depend del $(OBJ_DIR)\.depend
	@$(foreach var, $(CPP_FILES), $(call genDepend, $(var)))
	@if exist depend del depend

-include .depend

# Pattern matching rules
$(OBJ_DIR)/%.o:$(SRC_DIR)/%.cpp
	$(CC) $(CFLAGS) -c $< -o $@

%:$(SRC_DIR)/%.cpp
	$(CC) $(CFLAGS) -o $@ $<

# Fake rule for make clean
clean:
	@if exist $(OBJ_DIR)\.depend del $(OBJ_DIR)\.depend
	@if exist $(OBJ_DIR)\*.o del $(OBJ_DIR)\*.o
	@if exist $(PROGRAM) del $(PROGRAM)
	@if exist depend del depend

.PHONY: clean depend